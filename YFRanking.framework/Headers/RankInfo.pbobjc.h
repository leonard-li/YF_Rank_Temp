// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RankInfo.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(YF_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define YF_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if YF_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/YFProtocolBuffers.h>
#else
 #import <YFUtils/YFUtils.h>
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - RankInfoRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (YFExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c YFExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
YF_FINAL @interface RankInfoRoot : YFRootObject
@end

#pragma mark - RankInfo

typedef YF_ENUM(RankInfo_FieldNumber) {
  RankInfo_FieldNumber_UserId = 1,
  RankInfo_FieldNumber_ScoresArray = 2,
  RankInfo_FieldNumber_ExtendsInfo = 3,
};

/**
 * 用户在榜单中的信息
 **/
YF_FINAL @interface RankInfo : YFMessage

/** 用户ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

/** 用户的成绩 */
@property(nonatomic, readwrite, strong, null_resettable) YFUInt32Array *scoresArray;
/** The number of items in @c scoresArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger scoresArray_Count;

/** 用户扩展信息，包括用户的name，icon等 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *extendsInfo;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
